name: Create Release

on:
  push:
<<<<<<< HEAD
    tags:
      - 'v*' # Запускать workflow при создании тэга, начинающегося с 'v'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build binaries
        run: |
          # Команды для сборки бинарных файлов
          make build-linux
          make build-windows
          make build-macos

      - name: Create source archives
        run: |
          git archive --format=zip --output=source-code.zip HEAD
          git archive --format=tar.gz --output=source-code.tar.gz HEAD
=======
    branches: [master]
    tags: ['*']  # Добавляем триггер на тэги
  pull_request:
    branches: [master]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        build_type: [Release]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30

    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y --no-install-recommends \
          cmake \
          g++ \
          make \
          libfmt-dev \
          rpm

    - name: Install dependencies (Windows)
      if: matrix.os == 'windows-latest'
      uses: microsoft/setup-msbuild@v2
      with:
        vs-version: '17.0'
>>>>>>> 95961356142bca731012588c2f8156c98e979f69

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./path/to/your/binaries/solver-pckg-0.1.0.1-Darwin.dmg
          asset_name: solver-pckg-0.1.0.1-Darwin.dmg
          asset_content_type: application/octet-stream

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./path/to/your/binaries/solver-pckg-0.1.0.1-Linux.deb
          asset_name: solver-pckg-0.1.0.1-Linux.deb
          asset_content_type: application/octet-stream

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./path/to/your/binaries/solver-pckg-0.1.0.1-Linux.rpm
          asset_name: solver-pckg-0.1.0.1-Linux.rpm
          asset_content_type: application/octet-stream

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./path/to/your/binaries/solver-pckg-0.1.0.1-win64.exe
          asset_name: solver-pckg-0.1.0.1-win64.exe
          asset_content_type: application/octet-stream

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./path/to/your/binaries/solver-pckg-0.1.0.1-win64.msi
          asset_name: solver-pckg-0.1.0.1-win64.msi
          asset_content_type: application/octet-stream

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./source-code.zip
          asset_name: source-code.zip
          asset_content_type: application/zip

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./source-code.tar.gz
          asset_name: source-code.tar.gz
          asset_content_type: application/gzip

<<<<<<< HEAD
=======
    - name: Create Package
      if: startsWith(github.ref, 'refs/tags/')
      shell: bash
      run: |
        cd build
        if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
          cpack -G DEB
          cpack -G RPM
        elif [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          cpack -G WIX
        elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
          cpack -G DragNDrop
        fi

    - name: Upload artifacts
      if: github.event_name == 'push'
      uses: actions/upload-artifact@v4
      with:
        name: build-${{ matrix.os }}-${{ matrix.build_type }}
        path: build/
        retention-days: 3

    - name: Upload Release Assets
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: build/*.deb, build/*.rpm, build/*.msi, build/*.dmg
        asset_name: ${{ github.event.release.tag_name }}-${{ matrix.os }}.package
        asset_content_type: application/octet-stream

>>>>>>> 95961356142bca731012588c2f8156c98e979f69
