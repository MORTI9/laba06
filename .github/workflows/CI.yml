name: CMake Build

on:
  push:
    branches: [master]
    tags: ['*']  # Добавляем триггер на тэги
  pull_request:
    branches: [master]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        build_type: [Release]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30

    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y --no-install-recommends \
          cmake \
          g++ \
          make \
          libfmt-dev \
          rpm

    - name: Install dependencies (Windows)
      if: matrix.os == 'windows-latest'
      uses: microsoft/setup-msbuild@v2
      with:
        vs-version: '17.0'

    - name: Configure Project
      shell: bash
      run: |
        mkdir -p build
        if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          cmake -S . -B build -G "Visual Studio 17 2022" -A x64
        else
          cmake -S . -B build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        fi

    - name: Build Project
      shell: bash
      run: |
        if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          cmake --build build --config ${{ matrix.build_type }} --parallel 4
        else
          cmake --build build -- -j$(nproc)
        fi

    - name: Run tests
      if: matrix.os == 'ubuntu-latest'
      run: |
        cd build
        ctest --output-on-failure

    - name: Create Package
      if: startsWith(github.ref, 'refs/tags/')
      shell: bash
      run: |
        cd build
        if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
          cpack -G DEB
          cpack -G RPM
        elif [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          cpack -G WIX
        elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
          cpack -G DragNDrop
        fi

    - name: Upload artifacts
      if: github.event_name == 'push'
      uses: actions/upload-artifact@v4
      with:
        name: build-${{ matrix.os }}-${{ matrix.build_type }}
        path: build/
        retention-days: 3

    - name: Upload Release Assets
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: build/*.deb, build/*.rpm, build/*.msi, build/*.dmg
        asset_name: ${{ github.event.release.tag_name }}-${{ matrix.os }}.package
        asset_content_type: application/octet-stream

